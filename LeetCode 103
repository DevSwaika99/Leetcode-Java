/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Deque<TreeNode> q = new ArrayDeque<>();
        Deque<Integer> s = new ArrayDeque<>();
        if (root==null) return ans;
        boolean rev = false;
        q.add(root);
        while (!q.isEmpty()) {
            List<Integer> temp = new ArrayList<>();
            int count = q.size();
            for (int i=0; i<count; i++) {
                TreeNode curr = q.remove();
                if(rev) s.push(curr.val);
                else temp.add(curr.val);
                if(curr.left!=null) q.add(curr.left);
                if(curr.right!=null) q.add(curr.right);
            }
            if(rev) {
                while(!s.isEmpty()) temp.add(s.pop());
            }
            rev = !rev;
            ans.add(temp);
        }
        return ans;
    }
}
