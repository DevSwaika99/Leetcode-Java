/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode ans = new ListNode(0);
        ListNode curr = ans;
        int carry = 0;
        while(l1!=null || l2!=null) {
            int l1_val = (l1!=null) ? l1.val : 0;
            int l2_val = (l2!=null) ? l2.val : 0;
            int ans_val = l1_val + l2_val + carry;
            carry = ans_val/10;
            ans_val = ans_val % 10;
            ListNode next = new ListNode(ans_val);
            curr.next = next;
            if (l1!=null) l1 = l1.next;
            if (l2!=null) l2 = l2.next;
            curr = curr.next; 
        }
        if (carry>0) {
            ListNode last = new ListNode(carry);
            curr.next = last;
        }
        return ans.next;
    }
}
