/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        if (head==null || head.next==null) return head;
        ListNode curr = head;
        ListNode lessHead = null;
        ListNode moreHead = null;
        while (curr!=null) {
            if (curr.val < x) {
                lessHead = new ListNode(curr.val);
            }
            curr = curr.next;
        }
        curr = head;
        while (curr!=null) {
            if (curr.val >= x) {
                moreHead = new ListNode(curr.val);
            }
            curr = curr.next;
        }
        curr = head;
        ListNode less = lessHead;
        ListNode more = moreHead;
        while (curr!=null) {
            if (curr.val < x) {
                ListNode node = new ListNode(curr.val);
                less.next = node;
                less = less.next;
            } else {
                ListNode node = new ListNode(curr.val);
                more.next = node;
                more = more.next;
            }
            curr = curr.next;
        }
        if (lessHead == null) return moreHead.next;
        if (moreHead == null) return lessHead.next;
        less.next = moreHead.next;
        ListNode ans = lessHead.next;
        return ans;
    }
}
