class Solution {
    public int maxSubarraySum(int[] arr) {
        int maxSum = arr[0];
        int curr = arr[0];
        int n = arr.length;
        for (int i=1; i<n; i++) {
            curr = Math.max(curr+arr[i], arr[i]);
            maxSum = Math.max(maxSum, curr);
        }
        return maxSum;
    }
    public int maxSubarraySumCircular(int[] arr) {
        int maxNormal = maxSubarraySum(arr);
        int n = arr.length;
        if (maxNormal < 0) return maxNormal;
        int arrSum = 0;
        for (int i=0; i<n; i++) {
            arrSum = arrSum + arr[i];
            arr[i] = -arr[i];
        }
        int maxCircular = arrSum + maxSubarraySum(arr);
        return Math.max(maxNormal, maxCircular);
    }
}
