/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode curr = head; int c = 0;
        while (curr!=null) {
            curr = curr.next; c++;
        }
        if (c<k) return head;
        curr = head;
        ListNode prev=null, next=null;
        int count = 0;
        while (curr!=null && count<k) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next; count++;
        }
        if (next!=null) {
            ListNode rest_head = reverseKGroup(next,k);
            head.next = rest_head;
        }
        return prev;
    }
}
